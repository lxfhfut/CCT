# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets

from PyQt5.QtCore import Qt, pyqtSignal


class ClickableLabel(QtWidgets.QLabel):
    leftClicked = pyqtSignal(int, int)
    rightClicked = pyqtSignal(int, int)

    def __init__(self, parent=None):
        super().__init__(parent)

    def mousePressEvent(self, event):
        if event.button() == Qt.LeftButton:
            self.leftClicked.emit(event.x(), event.y())
        elif event.button() == Qt.RightButton:
            self.rightClicked.emit(event.x(), event.y())


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.setWindowState(Qt.WindowMaximized)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMouseTracking(True)
        MainWindow.setFocusPolicy(QtCore.Qt.NoFocus)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")

        # left vertical layout
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.verticalLayout.setSpacing(6)

        # divider
        self.line_0 = QtWidgets.QFrame(self.centralwidget)
        self.line_0.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_0.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_0.setObjectName("line_0")
        self.verticalLayout.addWidget(self.line_0)

        # file converter
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_13")
        self.inputLifLabel = QtWidgets.QLabel(self.centralwidget)
        self.inputLifLabel.setObjectName("inputLifLabel")
        self.inputLifLabel.setToolTip(
            "Select the lif file you want to save into individual images.")
        self.inputLifLabel.setToolTipDuration(3000)
        self.horizontalLayout_15.addWidget(self.inputLifLabel)
        self.inputLifLineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.inputLifLineEdit.setEnabled(True)
        self.inputLifLineEdit.setObjectName("inputLifLineEdit")
        self.horizontalLayout_15.addWidget(self.inputLifLineEdit)
        self.lifBrowseBtn = QtWidgets.QPushButton(self.centralwidget)
        self.lifBrowseBtn.setObjectName("lifBrowseBtn")
        self.lifBrowseBtn.setEnabled(True)
        self.horizontalLayout_15.addWidget(self.lifBrowseBtn)
        self.verticalLayout.addLayout(self.horizontalLayout_15)

        # save directory
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.saveDirLabel = QtWidgets.QLabel(self.centralwidget)
        self.saveDirLabel.setObjectName("saveDirLabel")
        self.saveDirLabel.setToolTip(
            "Select the directory to save individual images.")
        self.saveDirLabel.setToolTipDuration(3000)
        self.horizontalLayout_16.addWidget(self.saveDirLabel)
        self.saveDirLineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.saveDirLineEdit.setEnabled(True)
        self.saveDirLineEdit.setObjectName("saveDirLineEdit")
        self.horizontalLayout_16.addWidget(self.saveDirLineEdit)
        self.saveBrowseBtn = QtWidgets.QPushButton(self.centralwidget)
        self.saveBrowseBtn.setObjectName("saveBrowseBtn")
        self.saveBrowseBtn.setEnabled(True)
        self.horizontalLayout_16.addWidget(self.saveBrowseBtn)
        self.verticalLayout.addLayout(self.horizontalLayout_16)

        # convert button
        self.horizontalLayout_17 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_17.setObjectName("horizontalLayout_17")
        spacerItem_h = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        self.horizontalLayout_17.addItem(spacerItem_h)
        self.convertBtn = QtWidgets.QPushButton(self.centralwidget)
        self.convertBtn.setObjectName("convertBtn")
        self.convertBtn.setEnabled(False)
        self.horizontalLayout_17.addWidget(self.convertBtn)
        self.verticalLayout.addLayout(self.horizontalLayout_17)

        # divider
        self.line_8 = QtWidgets.QFrame(self.centralwidget)
        self.line_8.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_8.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_8.setObjectName("line_8")
        self.verticalLayout.addWidget(self.line_8)

        # open and save image buttons
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.openImageButton = QtWidgets.QPushButton(self.centralwidget)
        self.openImageButton.setObjectName("openImageButton")
        self.horizontalLayout.addWidget(self.openImageButton)
        self.saveImageButton = QtWidgets.QPushButton(self.centralwidget)
        self.saveImageButton.setObjectName("saveImageButton")
        self.saveImageButton.setEnabled(False)
        self.horizontalLayout.addWidget(self.saveImageButton)
        self.verticalLayout.addLayout(self.horizontalLayout)

        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout.addWidget(self.line_2)

        spacerItem3 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem3)

        # radio button for dot counting
        self.dotCntRadioBtn = QtWidgets.QRadioButton(self.centralwidget)
        self.dotCntRadioBtn.setChecked(True)
        self.dotCntRadioBtn.setEnabled(False)
        self.dotCntRadioBtn.setObjectName("dotCntRadioBtn")
        self.verticalLayout.addWidget(self.dotCntRadioBtn)

        # set min and max sigma
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.minSigmaSpinLabel = QtWidgets.QLabel(self.centralwidget)
        self.minSigmaSpinLabel.setObjectName("minSigmalSpinLabel")
        self.minSigmaSpinLabel.setToolTip(
            "The smallest size of detectable dots. Keep this low to detect smaller dots.")
        self.minSigmaSpinLabel.setToolTipDuration(5000)
        self.horizontalLayout_3.addWidget(self.minSigmaSpinLabel)
        self.minSigmaSpinBox = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.minSigmaSpinBox.setRange(0.5, 1.2)
        self.minSigmaSpinBox.setValue(0.7)
        self.minSigmaSpinBox.setSingleStep(0.05)
        self.minSigmaSpinBox.setEnabled(False)
        self.horizontalLayout_3.addWidget(self.minSigmaSpinBox)
        self.maxSigmaSpinLabel = QtWidgets.QLabel(self.centralwidget)
        self.maxSigmaSpinLabel.setObjectName("maxSigmalSpinLabel")
        self.maxSigmaSpinLabel.setToolTip(
            "The largest size of detectable dots. Keep this high to detect larger dots.")
        self.maxSigmaSpinLabel.setToolTipDuration(5000)
        self.horizontalLayout_3.addWidget(self.maxSigmaSpinLabel)
        self.maxSigmaSpinBox = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.maxSigmaSpinBox.setRange(0.8, 1.5)
        self.maxSigmaSpinBox.setValue(0.9)
        self.maxSigmaSpinBox.setSingleStep(0.05)
        self.maxSigmaSpinBox.setEnabled(False)
        self.horizontalLayout_3.addWidget(self.maxSigmaSpinBox)
        self.verticalLayout.addLayout(self.horizontalLayout_3)

        # num of steps for adjusting sigma
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.numSigmaLabel = QtWidgets.QLabel(self.centralwidget)
        self.numSigmaLabel.setObjectName("numSigmaLabel")
        self.numSigmaLabel.setToolTip("The number of intermediate values to use in [min_sigma, max_sigma].")
        self.numSigmaLabel.setToolTipDuration(5000)
        self.horizontalLayout_4.addWidget(self.numSigmaLabel)
        self.numSigmaSlider = QtWidgets.QSlider(self.centralwidget)
        self.numSigmaSlider.setOrientation(QtCore.Qt.Horizontal)
        self.numSigmaSlider.setObjectName("numSigmaSlider")
        self.numSigmaSlider.setRange(1, 8)
        self.numSigmaSlider.setValue(2)
        self.numSigmaSlider.setEnabled(False)
        self.horizontalLayout_4.addWidget(self.numSigmaSlider)
        self.numSigmaValueLabel = QtWidgets.QLabel(self.centralwidget)
        self.numSigmaValueLabel.setObjectName("numSigmaValueLabel")
        self.horizontalLayout_4.addWidget(self.numSigmaValueLabel)
        self.verticalLayout.addLayout(self.horizontalLayout_4)

        # absolute threshold slider
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.ablThreshLabel = QtWidgets.QLabel(self.centralwidget)
        self.ablThreshLabel.setObjectName("ablThreshLabel")
        self.ablThreshLabel.setToolTip(
            "Reduce this to detect blobs with lower intensities. If set to 0, only rel_threshold will be used. ")
        self.ablThreshLabel.setToolTipDuration(5000)
        self.horizontalLayout_2.addWidget(self.ablThreshLabel)
        self.ablThreshSlider = QtWidgets.QSlider(self.centralwidget)
        self.ablThreshSlider.setOrientation(QtCore.Qt.Horizontal)
        self.ablThreshSlider.setObjectName("ablThreshSlider")
        self.ablThreshSlider.setRange(0, 100)
        self.ablThreshSlider.setSliderPosition(25)
        self.ablThreshSlider.setEnabled(False)
        self.horizontalLayout_2.addWidget(self.ablThreshSlider)
        self.ablValueLabel = QtWidgets.QLabel(self.centralwidget)
        self.ablValueLabel.setObjectName("ablValueLabel")
        self.horizontalLayout_2.addWidget(self.ablValueLabel)
        self.verticalLayout.addLayout(self.horizontalLayout_2)

        # relative threshold slider
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.relThreshLabel = QtWidgets.QLabel(self.centralwidget)
        self.relThreshLabel.setObjectName("relThreshLabel")
        self.relThreshLabel.setToolTip(
            "Minimum intensity of peaks. If abs_threshold is also specified, whichever is larger will be used.")
        self.horizontalLayout_5.addWidget(self.relThreshLabel)
        self.relThreshSlider = QtWidgets.QSlider(self.centralwidget)
        self.relThreshSlider.setOrientation(QtCore.Qt.Horizontal)
        self.relThreshSlider.setObjectName("relThreshSlider")
        self.relThreshSlider.setRange(0, 100)
        self.relThreshSlider.setSliderPosition(50)
        self.relThreshSlider.setEnabled(False)
        self.horizontalLayout_5.addWidget(self.relThreshSlider)
        self.relValueLabel = QtWidgets.QLabel(self.centralwidget)
        self.relValueLabel.setObjectName("relValueLabel")
        self.horizontalLayout_5.addWidget(self.relValueLabel)
        self.verticalLayout.addLayout(self.horizontalLayout_5)

        # count dots button
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.dotRadiusCheckBox = QtWidgets.QCheckBox(self.centralwidget)
        self.dotRadiusCheckBox.setObjectName("dotRadiusCheckBox")
        self.dotRadiusCheckBox.setText("Circle")
        self.dotRadiusCheckBox.setChecked(True)
        self.dotRadiusCheckBox.setEnabled(False)
        self.horizontalLayout_6.addWidget(self.dotRadiusCheckBox)
        self.dotNumberCheckBox = QtWidgets.QCheckBox(self.centralwidget)
        self.dotNumberCheckBox.setObjectName("dotNumberCheckBox")
        self.dotNumberCheckBox.setText("Number")
        self.dotNumberCheckBox.setChecked(False)
        self.dotNumberCheckBox.setEnabled(False)
        self.horizontalLayout_6.addWidget(self.dotNumberCheckBox)
        spacerItem = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem)
        self.cntDotsBnt = QtWidgets.QPushButton(self.centralwidget)
        self.cntDotsBnt.setObjectName("cntDotsBnt")
        self.cntDotsBnt.setEnabled(False)
        self.horizontalLayout_6.addWidget(self.cntDotsBnt)
        self.verticalLayout.addLayout(self.horizontalLayout_6)

        # divider
        self.line_3 = QtWidgets.QFrame(self.centralwidget)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.verticalLayout.addWidget(self.line_3)

        spacerItem0 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem0)

        # radio button for cell counting
        self.cellCntRadioBtn = QtWidgets.QRadioButton(self.centralwidget)
        self.cellCntRadioBtn.setObjectName("cellCntRadioBtn")
        self.cellCntRadioBtn.setEnabled(False)
        self.verticalLayout.addWidget(self.cellCntRadioBtn)

        # probability threshold slider
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.probThreshLabel = QtWidgets.QLabel(self.centralwidget)
        self.probThreshLabel.setObjectName("probThreshLabel")
        self.probThreshLabel.setToolTip("Cells likelihood threshold. Reduce this to detect more cells.")
        self.probThreshLabel.setToolTipDuration(5000)
        self.horizontalLayout_8.addWidget(self.probThreshLabel)

        self.probThreshSlider = QtWidgets.QSlider(self.centralwidget)
        self.probThreshSlider.setEnabled(False)
        self.probThreshSlider.setRange(5, 20)
        self.probThreshSlider.setSliderPosition(12)
        self.probThreshSlider.setEnabled(False)
        self.probThreshSlider.setOrientation(QtCore.Qt.Horizontal)
        self.probThreshSlider.setObjectName("probThreshSlider")
        self.horizontalLayout_8.addWidget(self.probThreshSlider)

        self.probValueLabel = QtWidgets.QLabel(self.centralwidget)
        self.probValueLabel.setObjectName("probValueLabel")
        self.horizontalLayout_8.addWidget(self.probValueLabel)
        self.verticalLayout.addLayout(self.horizontalLayout_8)

        # nms threshold slider
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.nmsThreshLabel = QtWidgets.QLabel(self.centralwidget)
        self.nmsThreshLabel.setObjectName("nmsThreshLabel")
        self.nmsThreshLabel.setToolTip("Determine how dense the detected cells can be. Increase this to detect cells that are more densely distributed.")
        self.nmsThreshLabel.setToolTipDuration(5000)
        self.horizontalLayout_7.addWidget(self.nmsThreshLabel)
        self.nmsThreshSlider = QtWidgets.QSlider(self.centralwidget)
        self.nmsThreshSlider.setEnabled(False)
        self.nmsThreshSlider.setRange(0, 20)
        self.nmsThreshSlider.setSliderPosition(10)
        self.nmsThreshSlider.setEnabled(False)
        self.nmsThreshSlider.setOrientation(QtCore.Qt.Horizontal)
        self.nmsThreshSlider.setObjectName("nmsThreshSlider")
        self.horizontalLayout_7.addWidget(self.nmsThreshSlider)
        self.nmsValueLabel = QtWidgets.QLabel(self.centralwidget)
        self.nmsValueLabel.setObjectName("nmsValueLabel")
        self.horizontalLayout_7.addWidget(self.nmsValueLabel)
        self.verticalLayout.addLayout(self.horizontalLayout_7)

        # min intensity slider
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.minIntensityLabel = QtWidgets.QLabel(self.centralwidget)
        self.minIntensityLabel.setObjectName("minIntensityLabel")
        self.minIntensityLabel.setToolTip("Cells with an average intensity lower than min_intensity are ignored.")
        self.minIntensityLabel.setToolTipDuration(5000)
        self.horizontalLayout_9.addWidget(self.minIntensityLabel)
        self.minIntensitySlider = QtWidgets.QSlider(self.centralwidget)
        self.minIntensitySlider.setEnabled(False)
        self.minIntensitySlider.setMaximum(255)
        self.minIntensitySlider.setSingleStep(5)
        self.minIntensitySlider.setSliderPosition(50)
        self.minIntensitySlider.setEnabled(False)
        self.minIntensitySlider.setOrientation(QtCore.Qt.Horizontal)
        self.minIntensitySlider.setObjectName("minIntensitySlider")
        self.horizontalLayout_9.addWidget(self.minIntensitySlider)
        self.minIntensityValueLabel = QtWidgets.QLabel(self.centralwidget)
        self.minIntensityValueLabel.setObjectName("minIntensityValueLabel")
        self.horizontalLayout_9.addWidget(self.minIntensityValueLabel)
        self.verticalLayout.addLayout(self.horizontalLayout_9)

        # min size slider
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.minSizeLabel = QtWidgets.QLabel(self.centralwidget)
        self.minSizeLabel.setObjectName("minSizeLabel")
        self.minSizeLabel.setToolTip("Cells with a size smaller than min_size pixels are ignored.")
        self.horizontalLayout_10.addWidget(self.minSizeLabel)
        self.minSizeSlider = QtWidgets.QSlider(self.centralwidget)
        self.minSizeSlider.setEnabled(False)
        self.minSizeSlider.setMinimum(0)
        self.minSizeSlider.setMaximum(200)
        self.minSizeSlider.setSingleStep(20)
        self.minSizeSlider.setPageStep(50)
        self.minSizeSlider.setSliderPosition(64)
        self.minSizeSlider.setOrientation(QtCore.Qt.Horizontal)
        self.minSizeSlider.setObjectName("minSizeSlider")
        self.minSizeSlider.setEnabled(False)
        self.horizontalLayout_10.addWidget(self.minSizeSlider)
        self.minSizeValueLabel = QtWidgets.QLabel(self.centralwidget)
        self.minSizeValueLabel.setObjectName("minSizeValueLabel")
        self.horizontalLayout_10.addWidget(self.minSizeValueLabel)
        self.verticalLayout.addLayout(self.horizontalLayout_10)

        # tolerance slider for manual selection
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        self.toleranceLabel = QtWidgets.QLabel(self.centralwidget)
        self.toleranceLabel.setObjectName("toleranceLabel")
        self.toleranceLabel.setToolTip(
            "Tolerance value for manually selecting cells. A higher value will result in a larger cell area.")
        self.horizontalLayout_18.addWidget(self.toleranceLabel)
        self.toleranceSlider = QtWidgets.QSlider(self.centralwidget)
        self.toleranceSlider.setEnabled(False)
        self.toleranceSlider.setMinimum(0)
        self.toleranceSlider.setMaximum(50)
        self.toleranceSlider.setSingleStep(1)
        self.toleranceSlider.setPageStep(5)
        self.toleranceSlider.setSliderPosition(20)
        self.toleranceSlider.setOrientation(QtCore.Qt.Horizontal)
        self.toleranceSlider.setObjectName("toleranceSlider")
        self.toleranceSlider.setEnabled(False)
        self.horizontalLayout_18.addWidget(self.toleranceSlider)
        self.toleranceValueLabel = QtWidgets.QLabel(self.centralwidget)
        self.toleranceValueLabel.setObjectName("toleranceValueLabel")
        self.horizontalLayout_18.addWidget(self.toleranceValueLabel)
        self.verticalLayout.addLayout(self.horizontalLayout_18)

        # count cell button
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")

        self.cellBoundaryCheckBox = QtWidgets.QCheckBox(self.centralwidget)
        self.cellBoundaryCheckBox.setObjectName("cellBoundaryCheckBox")
        self.cellBoundaryCheckBox.setText("Boundary")
        self.cellBoundaryCheckBox.setChecked(True)
        self.cellBoundaryCheckBox.setEnabled(False)
        self.horizontalLayout_11.addWidget(self.cellBoundaryCheckBox)
        self.cellNumberCheckBox = QtWidgets.QCheckBox(self.centralwidget)
        self.cellNumberCheckBox.setObjectName("cellNumberCheckBox")
        self.cellNumberCheckBox.setText("Number")
        self.cellNumberCheckBox.setChecked(False)
        self.cellNumberCheckBox.setEnabled(False)
        self.horizontalLayout_11.addWidget(self.cellNumberCheckBox)
        spacerItem1 = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_11.addItem(spacerItem1)
        self.cntCellsBtn = QtWidgets.QPushButton(self.centralwidget)
        self.cntCellsBtn.setEnabled(False)
        self.cntCellsBtn.setObjectName("cntCellsBtn")
        self.horizontalLayout_11.addWidget(self.cntCellsBtn)
        self.verticalLayout.addLayout(self.horizontalLayout_11)

        # divider
        self.line_6 = QtWidgets.QFrame(self.centralwidget)
        self.line_6.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.verticalLayout.addWidget(self.line_6)

        # input directory selector
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.inputDirLabel = QtWidgets.QLabel(self.centralwidget)
        self.inputDirLabel.setObjectName("inputDirLabel")
        self.inputDirLabel.setToolTip(
            "Select the input directory of images for batch processing.")
        self.inputDirLabel.setToolTipDuration(3000)
        self.horizontalLayout_12.addWidget(self.inputDirLabel)
        self.inputDirLineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.inputDirLineEdit.setEnabled(False)
        self.inputDirLineEdit.setObjectName("inputDirLineEdit")
        self.horizontalLayout_12.addWidget(self.inputDirLineEdit)
        self.inputBrowseBtn = QtWidgets.QPushButton(self.centralwidget)
        self.inputBrowseBtn.setObjectName("inputBrowseBtn")
        self.inputBrowseBtn.setEnabled(False)
        self.horizontalLayout_12.addWidget(self.inputBrowseBtn)
        self.verticalLayout.addLayout(self.horizontalLayout_12)

        # output directory selector
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.outputDirLabel = QtWidgets.QLabel(self.centralwidget)
        self.outputDirLabel.setObjectName("outputDirLabel")
        self.outputDirLabel.setToolTip(
            "Select the output directory for storing results.")
        self.outputDirLabel.setToolTipDuration(3000)
        self.horizontalLayout_13.addWidget(self.outputDirLabel)
        self.outputDirLineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.outputDirLineEdit.setEnabled(False)
        self.outputDirLineEdit.setObjectName("outputDirLineEdit")
        self.horizontalLayout_13.addWidget(self.outputDirLineEdit)
        self.outputBrowseBtn = QtWidgets.QPushButton(self.centralwidget)
        self.outputBrowseBtn.setObjectName("outputBrowseBtn")
        self.outputBrowseBtn.setEnabled(False)
        self.horizontalLayout_13.addWidget(self.outputBrowseBtn)
        self.verticalLayout.addLayout(self.horizontalLayout_13)

        # batch processing button
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        spacerItem_h = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        self.horizontalLayout_14.addItem(spacerItem_h)
        self.batchProcBtn = QtWidgets.QPushButton(self.centralwidget)
        self.batchProcBtn.setObjectName("batchProcBtn")
        self.batchProcBtn.setEnabled(False)
        self.horizontalLayout_14.addWidget(self.batchProcBtn)
        self.verticalLayout.addLayout(self.horizontalLayout_14)

        # divider
        self.line_7 = QtWidgets.QFrame(self.centralwidget)
        self.line_7.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_7.setObjectName("line_7")
        self.verticalLayout.addWidget(self.line_7)

        # info label
        self.resultLabelUpper = QtWidgets.QLabel(self.centralwidget)
        self.resultLabelUpper.setObjectName("resultLabelUpper")
        self.resultLabelUpper.setText("******************************** Results *********************************")
        self.verticalLayout.addWidget(self.resultLabelUpper)
        self.resultLabelMiddle = QtWidgets.QLabel(self.centralwidget)
        self.resultLabelMiddle.setObjectName("resultLabelMiddle")
        self.resultLabelMiddle.setWordWrap(True)
        self.resultLabelMiddle.setText("Results will be shown here ...")
        self.verticalLayout.addWidget(self.resultLabelMiddle)
        self.batchInfoLabel = QtWidgets.QLabel(self.centralwidget)
        self.batchInfoLabel.setObjectName("batchInfoLabel")
        self.batchInfoLabel.setText("")
        self.verticalLayout.addWidget(self.batchInfoLabel)
        self.resultLabelBottom = QtWidgets.QLabel(self.centralwidget)
        self.resultLabelBottom.setObjectName("resultLabelBottom")
        self.resultLabelBottom.setText("*************************************************************************")
        self.verticalLayout.addWidget(self.resultLabelBottom)

        # divider
        spacerItem2 = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem2)

        # add vertical layout to grid layout
        self.gridLayout.addLayout(self.verticalLayout, 2, 0, 1, 1)
        self.gridLayout.setColumnStretch(0, 1)

        self.verticalLayout_right = QtWidgets.QVBoxLayout()
        self.verticalLayout_right.setSpacing(6)
        self.verticalLayout_right.setObjectName("verticalLayout_right")

        self.line_7 = QtWidgets.QFrame(self.centralwidget)
        self.line_7.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_7.setObjectName("line_7")
        self.verticalLayout_right.addWidget(self.line_7)

        # define image display area
        self.imageDisplayLabel = ClickableLabel(self.centralwidget)
        self.imageDisplayLabel.setAlignment(QtCore.Qt.AlignHCenter
                                            | QtCore.Qt.AlignVCenter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding,
                                           QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.imageDisplayLabel.sizePolicy().
                                     hasHeightForWidth())
        self.imageDisplayLabel.setSizePolicy(sizePolicy)
        self.imageDisplayLabel.setScaledContents(False)
        self.imageDisplayLabel.setAutoFillBackground(False)
        self.imageDisplayLabel.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.imageDisplayLabel.setText("")
        self.imageDisplayLabel.setObjectName("imageDisplayLabel")
        self.verticalLayout_right.addWidget(self.imageDisplayLabel)
        self.gridLayout.addLayout(self.verticalLayout_right, 1, 3, 2, 3)
        self.gridLayout.setColumnStretch(3, 5)

        self.line_5 = QtWidgets.QFrame(self.centralwidget)
        self.line_5.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.gridLayout.addWidget(self.line_5, 2, 2, 1, 1)

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.dotCntRadioBtn.toggled['bool'].connect(self.probThreshSlider.setDisabled)
        self.dotCntRadioBtn.toggled['bool'].connect(self.nmsThreshSlider.setDisabled)
        self.dotCntRadioBtn.toggled['bool'].connect(self.minIntensitySlider.setDisabled)
        self.dotCntRadioBtn.toggled['bool'].connect(self.minSizeSlider.setDisabled)
        self.dotCntRadioBtn.toggled['bool'].connect(self.toleranceSlider.setDisabled)
        self.dotCntRadioBtn.toggled['bool'].connect(self.cntCellsBtn.setDisabled)
        self.dotCntRadioBtn.toggled['bool'].connect(self.cellBoundaryCheckBox.setDisabled)
        self.dotCntRadioBtn.toggled['bool'].connect(self.cellNumberCheckBox.setDisabled)

        self.cellCntRadioBtn.toggled['bool'].connect(self.cntDotsBnt.setDisabled)
        self.cellCntRadioBtn.toggled['bool'].connect(self.dotRadiusCheckBox.setDisabled)
        self.cellCntRadioBtn.toggled['bool'].connect(self.dotNumberCheckBox.setDisabled)
        self.cellCntRadioBtn.toggled['bool'].connect(self.minSigmaSpinBox.setDisabled)
        self.cellCntRadioBtn.toggled['bool'].connect(self.maxSigmaSpinBox.setDisabled)
        self.cellCntRadioBtn.toggled['bool'].connect(self.numSigmaSlider.setDisabled)
        self.cellCntRadioBtn.toggled['bool'].connect(self.ablThreshSlider.setDisabled)
        self.cellCntRadioBtn.toggled['bool'].connect(self.relThreshSlider.setDisabled)

        self.minSigmaSpinBox.valueChanged.connect(self.maxSigmaSpinBox.setMinimum)
        self.maxSigmaSpinBox.valueChanged.connect(self.minSigmaSpinBox.setMaximum)
        self.numSigmaSlider.valueChanged['int'].connect(self.numSigmaValueLabel.setNum)

        self.ablThreshSlider.valueChanged['int'].connect(
            lambda value: self.ablValueLabel.setText("{:.2f}".format(value/100.0)))
        self.relThreshSlider.valueChanged['int'].connect(
            lambda value: self.relValueLabel.setText("{:.2f}".format(value/100.0)))

        self.probThreshSlider.valueChanged['int'].connect(
            lambda value: self.probValueLabel.setText("{:.2f}".format(value/20.0)))
        self.nmsThreshSlider.valueChanged['int'].connect(
            lambda value: self.nmsValueLabel.setText("{:.2f}".format(value/20.0)))
        self.toleranceSlider.valueChanged['int'].connect(self.toleranceValueLabel.setNum)
        self.minIntensitySlider.valueChanged['int'].connect(self.minIntensityValueLabel.setNum)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Cell Counting Tool"))
        self.inputLifLabel.setText(_translate("MainWindow", "Lif path"))
        self.lifBrowseBtn.setText(_translate("MainWindow", "..."))
        self.saveDirLabel.setText(_translate("MainWindow", "Save dir"))
        self.saveBrowseBtn.setText(_translate("MainWindow", "..."))
        self.convertBtn.setText(_translate("MainWindow", "Convert"))
        self.openImageButton.setText(_translate("MainWindow", "Open"))
        self.saveImageButton.setText(_translate("MainWindow", "Save"))
        self.dotCntRadioBtn.setText(_translate("MainWindow", "Dots Counter"))
        self.minSigmaSpinLabel.setText(_translate("MainWindow", "Min sigma"))
        self.maxSigmaSpinLabel.setText(_translate("MainWindow", "Max sigma"))
        self.numSigmaLabel.setText(_translate("MainWindow", "No. of steps "))
        self.numSigmaValueLabel.setText(_translate("MainWindow", "2"))
        self.ablThreshLabel.setText(_translate("MainWindow", "Abl thresh. "))
        self.ablValueLabel.setText(_translate("MainWindow", "0.25"))
        self.relThreshLabel.setText(_translate("MainWindow", "Rel thresh. "))
        self.relValueLabel.setText(_translate("MainWindow", "0.5"))
        self.cntDotsBnt.setText(_translate("MainWindow", "Count dots"))
        self.cellCntRadioBtn.setText(_translate("MainWindow", "Cells Counter"))
        self.probThreshLabel.setText(_translate("MainWindow", "Prob thresh. "))
        self.probValueLabel.setText(_translate("MainWindow", "0.6"))
        self.nmsThreshLabel.setText(_translate("MainWindow", "NMS thresh. "))
        self.nmsValueLabel.setText(_translate("MainWindow", "0.5"))
        self.minIntensityLabel.setText(_translate("MainWindow", "Min intensity"))
        self.minIntensityValueLabel.setText(_translate("MainWindow", "50"))
        self.minSizeLabel.setText(_translate("MainWindow", "Min size      "))
        self.minSizeValueLabel.setText(_translate("MainWindow", "64"))
        self.toleranceLabel.setText(_translate("MainWindow", "Tolerance   "))
        self.toleranceValueLabel.setText(_translate("MainWindow", "20"))

        self.cntCellsBtn.setText(_translate("MainWindow", "Count cells"))
        self.inputDirLabel.setText(_translate("MainWindow", "Input    "))
        self.inputBrowseBtn.setText(_translate("MainWindow", "..."))
        self.outputDirLabel.setText(_translate("MainWindow", "Output"))
        self.outputBrowseBtn.setText(_translate("MainWindow", "..."))
        self.batchProcBtn.setText(_translate("MainWindow", "Process"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())